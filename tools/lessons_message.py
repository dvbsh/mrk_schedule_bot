from .get_lessons import get_schedule
from .clock import clock_emoji
import datetime
from json import load


def teachers_n_links():
    with open('teachersnlinks.json', 'r', encoding='utf-8') as file:
        return load(file)


def get_class_string(class_day, schedule):
    teachers_and_links = teachers_n_links()
    teacher_link, full_teacher_name = None, None
    teacher_values = None
    class_name = schedule[class_day]["class"]
    class_link = teachers_and_links.get(class_name)
    class_info = f'<i>{class_name}</i>' if class_name else "<a href=\"https://mrk-bsuir.by/ru/schedule/\">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.</a>"
    teacher_name = schedule[class_day]["teacher"]
    if teacher_name:
        teacher_values = teachers_and_links.get(teacher_name)
        if teacher_values:
            teacher_link, full_teacher_name = teacher_values.split('~')
    teacher_info = f'<i><a href="{teacher_link}">{full_teacher_name}</a></i>' if teacher_values else '"–£—á–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."'
    free_classes = ['–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ', '–ö–∞–Ω–∏–∫—É–ª—ã', '–ü—Ä–µ–¥–¥–∏–ø–ª–æ–º–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞', '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞']

    for name in free_classes:
        if name in class_name:
            return f'\nüîï –ü–∞—Ä—ã –Ω–µ—Ç! {name}.'
    else:
        return (
            f'\n<b>üìö 19:20-20:55 | –ü–∞—Ä–∞</b>:\n'
            f'<i><a href="{class_link}">"{class_info}"</a></i>'
            f'\n{"üë®‚Äçüè´" if teacher_name in ["–í–æ—Ä–æ–ø–∞–µ–≤", "–ñ–¥–∞–Ω–æ–≤–∏—á", "–ë–∞—Ç—É—Ä–∞"] else "üë©‚Äçüè´"}'
            f' <b>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å</b>:\n<i><a href="{teacher_link}">{teacher_info}</a></i>'
        )


def lessons():
    try:
        now = datetime.datetime.now()
        weekday = now.weekday()

        if weekday in range(0, 5):
            schedule = get_schedule()
            today_class = schedule.get("day active").get("class")

            today_class_string = get_class_string("day active", schedule)
            tomorrow_class_string = get_class_string("day tinted", schedule)

            time_class, time_class_end = (datetime.datetime(year=now.year, month=now.month, day=now.day, hour=19, minute=20),
                                          datetime.datetime(year=now.year, month=now.month, day=now.day, hour=20, minute=55))
            delta = time_class - now
            total_minutes = delta.seconds // 60

            if today_class:
                clock = clock_emoji(now.hour, now.minute)
                if '–ü–∞—Ä—ã –Ω–µ—Ç' in today_class_string:
                    within = f'{clock} <b>–°–µ–≥–æ–¥–Ω—è:\n:</b>\n<i>{today_class}</i>'
                elif time_class <= now <= time_class_end:
                    within = f'{clock} <b>–°–µ–≥–æ–¥–Ω—è:\n‚ùóÔ∏è19:20 | –ò–¥—ë—Ç –ø–∞—Ä–∞:</b>\n<i>"{today_class}"</i>'
                elif delta.days < 1 <= total_minutes < 60:
                    within = f'{clock} <b>–°–µ–≥–æ–¥–Ω—è, —á–µ—Ä–µ–∑ {total_minutes} –º–∏–Ω. :</b>{today_class_string}'
                elif time_class_end < now:
                    within = f'{clock} <b>–°–µ–≥–æ–¥–Ω—è:\nü•≥Ô∏è 20:55 | –ü–∞—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å:</b>\n<i>"{today_class}"</i>'
                else:
                    hours, minutes = divmod(total_minutes, 60)
                    within = f'{clock} <b>–°–µ–≥–æ–¥–Ω—è, —á–µ—Ä–µ–∑ {hours} —á. {minutes} –º–∏–Ω. :</b>{today_class_string}'
            else:
                within = '<b>ü•∫ –Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Ä–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è. </b>'

            tomorrow = tomorrow_class_string
            tomorrow_str = f'\n\nüóì <b>–ó–∞–≤—Ç—Ä–∞:</b><i>{tomorrow_class_string}</i>' if tomorrow else '<b>ü•∫ –Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Ä–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞. </b>'

            return within + tomorrow_str

        elif weekday == 5:
            return '<b>ü•≥ –°–µ–≥–æ–¥–Ω—è - —Å—É–±–±–æ—Ç–∞!</b>'
        elif weekday == 6:
            schedule = get_schedule()
            tomorrow = get_class_string("day tinted", schedule)
            tomorrow_str = f'\n\nüóì <b>–ó–∞–≤—Ç—Ä–∞:</b><i>{get_class_string("day tinted", schedule)}</i>' if tomorrow else '<b>ü•∫ –Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Ä–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞. </b>'
            return (f'<b>ü•≥ –°–µ–≥–æ–¥–Ω—è - –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ!</b>'
                    f'{tomorrow_str}')

    except Exception as e:
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}. @dvbsh."
